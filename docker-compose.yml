
services:
  # ──────────── backend ────────────
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@db:5432/habit_tracker
    networks: [habit-network]
    restart: always

  # ──────────── frontend (Nginx SPA) ────────────
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks: [habit-network]
    restart: always

  # ──────────── Postgres ────────────
  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=habit_tracker
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks: [habit-network]
    restart: always
    healthcheck:           
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  # ──────────── Postgres Exporter ────────────
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@db:5432/postgres?sslmode=disable
    depends_on:
      - db
    networks: [habit-network]
    restart: always

  # ──────────── Prometheus ────────────
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks: [habit-network]
    restart: always

  # ──────────── Grafana ────────────
  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    networks: [habit-network]
    restart: always

  # ──────────── pytest ────────────
  tests:
    build: ./backend        
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@db:5432/habit_tracker_test
      - POSTGRES_PASSWORD=postgres
    entrypoint: ["/app/tests/entrypoint.sh"]   
    networks: [habit-network]
    restart: "no"
    volumes:
      - ./coverage:/app/htmlcov

networks:
  habit-network:
    driver: bridge

volumes:
  postgres_data:
