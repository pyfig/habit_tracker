name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  lint-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: pip install black flake8
      - run: black --check backend
      - run: flake8 backend
      - name: Notify Telegram
        if: always()
        uses: appleboy/telegram-action@0.0.7
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ✅ lint-python job ${{ job.status }} for ${{ github.repository }}@${{ github.sha }}

  lint-js:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - run: npx eslint frontend
      - name: Notify Telegram
        if: always()
        uses: appleboy/telegram-action@0.0.7
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ✅ lint-js job ${{ job.status }} for ${{ github.repository }}@${{ github.sha }}

  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: habit_tracker_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@localhost:5432/habit_tracker_test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: pip install -r backend/requirements.txt -r backend/requirements-dev.txt
      - run: PYTHONPATH=backend pytest -q
      - name: Notify Telegram
        if: always()
        uses: appleboy/telegram-action@0.0.7
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ✅ tests job ${{ job.status }} for ${{ github.repository }}@${{ github.sha }}
